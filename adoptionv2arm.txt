#!/bin/bash

# Parametreler
DOMAIN_NAME=$1

# Parametre kontrolü
if [ -z "$DOMAIN_NAME" ]; then
  echo "Kullanım: $0 <Domain Adı>"
  exit 1
fi

# Nginx yapılandırması
NGINX_CONF="/home/azureuser/devops/az-market-test/nginx/default.conf"
if [ -f "$NGINX_CONF" ]; then
  sed -i "s/server_name .*/server_name $DOMAIN_NAME;/" "$NGINX_CONF"
  echo "Nginx yapılandırması güncellendi."
else
  echo "Nginx yapılandırma dosyası bulunamadı: $NGINX_CONF"
  exit 1
fi

# env update
ENV_FILE="/home/azureuser/devops/az-market-test/adoption-v2-frontend-main/.env"
if [ -f "$ENV_FILE" ]; then
  sed -i "s|VITE_API_URL_PROD=https://[^/]*/api|VITE_API_URL_PROD=https://$DOMAIN_NAME/api|" "$ENV_FILE"
  echo "Frontend .env dosyası güncellendi: https://$DOMAIN_NAME/api"
else
  echo "Frontend .env dosyası bulunamadı: $ENV_FILE"
  exit 1
fi

# Dockerfile içindeki "npm install" satırlarını --legacy-peer-deps ile değiştir
echo "Dockerfile'lar güncelleniyor..."
find /home/azureuser/devops/az-market-test -name "Dockerfile" | while read dockerfile; do
  if grep -q "npm install" "$dockerfile"; then
    sed -i 's/npm install/npm install --legacy-peer-deps/' "$dockerfile"
    echo "$dockerfile dosyası güncellendi."
  fi
done

# Docker system prune
echo "Docker gereksiz veriler temizleniyor (prune)..."
sudo docker system prune -f

# Docker Compose ve yeniden başlatma
cd /home/azureuser/devops/az-market-test && sudo docker compose up -d --build --force-recreate || { echo "Docker Compose yeniden başlatılamadı."; exit 1; }

echo "Tüm işlemler başarıyla tamamlandı."
